{"ast":null,"code":"import _slicedToArray from\"/home/ubuntu2004/Projets/marvel-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{Fragment,useEffect,useState}from\"react\";import axios from\"axios\";import{GiTrophyCup}from\"react-icons/gi\";import Loader from\"../Loader\";import Modal from\"../Modal\";var QuizOver=React.forwardRef(function(props,ref){var levelNames=props.levelNames,score=props.score,maxQuestion=props.maxQuestion,quizLevel=props.quizLevel,percent=props.percent,loadLevelQuestion=props.loadLevelQuestion;var API_PUBLIC_KEY=process.env.REACT_APP_MARVEL_API_KEY;var hash=\"0b377a7a2e4d514d3d3b9cd624d50c4e\";var _useState=useState([]),_useState2=_slicedToArray(_useState,2),asked=_useState2[0],setAsked=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),openModal=_useState4[0],setOpenModal=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),charactersInfo=_useState6[0],setCharactersInfo=_useState6[1];var _useState7=useState(true),_useState8=_slicedToArray(_useState7,2),loading=_useState8[0],setLoading=_useState8[1];useEffect(function(){setAsked(ref.current);if(localStorage.getItem(\"marvelStorageDate\")){var date=localStorage.getItem(\"marvelStorageDate\");checkDataAge(date);}},[ref]);var checkDataAge=function checkDataAge(date){var today=Date.now();var timeDifference=today-date;var daysDifference=timeDifference/(1000*3600*24);if(daysDifference>=15){localStorage.clear();localStorage.setItem(\"marvelStorageDate\",Date.now());}};var showModal=function showModal(id){setOpenModal(true);if(localStorage.getItem(id)){setCharactersInfo(JSON.parse(localStorage.getItem(id)));setLoading(false);}else{axios.get(\"https://gateway.marvel.com/v1/public/characters/\".concat(id,\"?ts=1&apikey=\").concat(API_PUBLIC_KEY,\"&hash=\").concat(hash)).then(function(response){setCharactersInfo(response.data);setLoading(false);localStorage.setItem(id,JSON.stringify(response.data));if(!localStorage.getItem(\"marvelStorageDate\")){localStorage.setItem(\"marvelStorageDate\",Date.now());}}).catch(function(err){console.log(err);});}};var hideModal=function hideModal(){setOpenModal(false);setLoading(true);};var capitalizedFirstLetter=function capitalizedFirstLetter(str){return str.charAt(0).toUpperCase()+str.slice(1);};var averageGrade=maxQuestion/2;if(score<averageGrade){setTimeout(function(){loadLevelQuestion(quizLevel);},3000);}var decision=score>=averageGrade?/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"stepsBtnContainer\"},quizLevel<levelNames.length?/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(\"p\",{className:\"successMsg\"},\"Bravo, passez au niveau suivant\"),/*#__PURE__*/React.createElement(\"button\",{className:\"btnResult success\",onClick:function onClick(){return loadLevelQuestion(quizLevel);}},\"Niveau suivant\")):/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(\"p\",{className:\"successMsg\"},\" \",/*#__PURE__*/React.createElement(GiTrophyCup,{size:\"50px\"}),\" Bravo vous \\xEAtes un expert\"),/*#__PURE__*/React.createElement(\"button\",{className:\"btnResult gameOver\",onClick:function onClick(){return loadLevelQuestion(0);}},\"Accueil\"))),/*#__PURE__*/React.createElement(\"div\",{className:\"percentage\"},/*#__PURE__*/React.createElement(\"div\",{className:\"progressPercent\"},\"R\\xE9ussite : \",percent,\" %\"),/*#__PURE__*/React.createElement(\"div\",{className:\"progressPercent\"},\"note : \",score,\"/\",maxQuestion))):/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"stepsBtnContainer\"},/*#__PURE__*/React.createElement(\"p\",{className:\"failureMsg\"},\"Vous avez \\xE9chou\\xE9 !\")),/*#__PURE__*/React.createElement(\"div\",{className:\"percentage\"},/*#__PURE__*/React.createElement(\"div\",{className:\"progressPercent\"},\"R\\xE9ussite : \",percent,\" %\"),/*#__PURE__*/React.createElement(\"div\",{className:\"progressPercent\"},\"note : \",score,\"/\",maxQuestion)));var questionAnswer=score>=averageGrade?asked.map(function(question){return/*#__PURE__*/React.createElement(\"tr\",{key:question.id},/*#__PURE__*/React.createElement(\"td\",null,question.question),/*#__PURE__*/React.createElement(\"td\",null,question.answer),/*#__PURE__*/React.createElement(\"button\",{className:\"btnInfo\",onClick:function onClick(){return showModal(question.heroId);}},\"Info\"));}):/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",{colSpan:\"3\"},/*#__PURE__*/React.createElement(Loader,{loadingMsg:\"Pas de réponse\",styling:{textAlign:\"center\",color:\"red\"}})));var resultInModal=!loading?/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"modalHeader\"},/*#__PURE__*/React.createElement(\"h2\",null,charactersInfo.data.results[0].name)),/*#__PURE__*/React.createElement(\"div\",{className:\"modalBody\"},/*#__PURE__*/React.createElement(\"div\",{className:\"comicImage\"},/*#__PURE__*/React.createElement(\"img\",{src:charactersInfo.data.results[0].thumbnail.path+\".\"+charactersInfo.data.results[0].thumbnail.extension,alt:charactersInfo.data.results[0].name}),charactersInfo.attributionText),/*#__PURE__*/React.createElement(\"div\",{className:\"comicDetails\"},/*#__PURE__*/React.createElement(\"h3\",null,\"Description\"),charactersInfo.data.results[0].description?/*#__PURE__*/React.createElement(\"p\",null,charactersInfo.data.results[0].description):/*#__PURE__*/React.createElement(\"p\",null,\"Description indisponible ...\"),/*#__PURE__*/React.createElement(\"h3\",null,\"+ d'infos\"),charactersInfo.data.results[0].urls&&charactersInfo.data.results[0].urls.map(function(url,index){return/*#__PURE__*/React.createElement(\"a\",{key:index,href:url.url,target:\"_blank\",rel:\"noopener noreferrer\"},capitalizedFirstLetter(url.type));}),/*#__PURE__*/React.createElement(\"button\",null))),/*#__PURE__*/React.createElement(\"div\",{className:\"modalFooter\",onClick:hideModal},/*#__PURE__*/React.createElement(\"button\",{className:\"modalBtn\"},\"Fermer\"))):/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"modalHeader\"},/*#__PURE__*/React.createElement(\"h2\",null,\"En attente des donn\\xE9es Marvel\")),/*#__PURE__*/React.createElement(\"div\",{className:\"modalBody\"},/*#__PURE__*/React.createElement(Loader,{loadingMsg:\"Pas de réponse\",styling:{textAlign:\"center\",color:\"red\"}})));return/*#__PURE__*/React.createElement(Fragment,null,decision,/*#__PURE__*/React.createElement(\"hr\",null),/*#__PURE__*/React.createElement(\"p\",null,\"Les r\\xE9ponses aux questions pos\\xE9es\"),/*#__PURE__*/React.createElement(\"div\",{className:\"answerContainer\"},/*#__PURE__*/React.createElement(\"table\",{className:\"answers\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"Question\"),/*#__PURE__*/React.createElement(\"th\",null,\"r\\xE9ponse\"),/*#__PURE__*/React.createElement(\"th\",null,\"infos\"))),/*#__PURE__*/React.createElement(\"tbody\",null,questionAnswer))),/*#__PURE__*/React.createElement(Modal,{showModal:openModal,hideModal:hideModal},resultInModal));});export default React.memo(QuizOver);","map":{"version":3,"sources":["/home/ubuntu2004/Projets/marvel-test/src/components/QuizOver/index.js"],"names":["React","Fragment","useEffect","useState","axios","GiTrophyCup","Loader","Modal","QuizOver","forwardRef","props","ref","levelNames","score","maxQuestion","quizLevel","percent","loadLevelQuestion","API_PUBLIC_KEY","process","env","REACT_APP_MARVEL_API_KEY","hash","asked","setAsked","openModal","setOpenModal","charactersInfo","setCharactersInfo","loading","setLoading","current","localStorage","getItem","date","checkDataAge","today","Date","now","timeDifference","daysDifference","clear","setItem","showModal","id","JSON","parse","get","then","response","data","stringify","catch","err","console","log","hideModal","capitalizedFirstLetter","str","charAt","toUpperCase","slice","averageGrade","setTimeout","decision","length","questionAnswer","map","question","answer","heroId","textAlign","color","resultInModal","results","name","thumbnail","path","extension","attributionText","description","urls","url","index","type","memo"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { GiTrophyCup } from \"react-icons/gi\";\nimport Loader from \"../Loader\";\nimport Modal from \"../Modal\";\n\nconst QuizOver = React.forwardRef((props, ref) => {\n  const {\n    levelNames,\n    score,\n    maxQuestion,\n    quizLevel,\n    percent,\n    loadLevelQuestion,\n  } = props;\n\n  const API_PUBLIC_KEY = process.env.REACT_APP_MARVEL_API_KEY;\n\n  const hash = \"0b377a7a2e4d514d3d3b9cd624d50c4e\";\n\n  const [asked, setAsked] = useState([]);\n  const [openModal, setOpenModal] = useState(false);\n  const [charactersInfo, setCharactersInfo] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    setAsked(ref.current);\n\n    if (localStorage.getItem(\"marvelStorageDate\")) {\n      const date = localStorage.getItem(\"marvelStorageDate\");\n      checkDataAge(date);\n    }\n  }, [ref]);\n\n  const checkDataAge = (date) => {\n    const today = Date.now();\n    const timeDifference = today - date;\n\n    const daysDifference = timeDifference / (1000 * 3600 * 24);\n\n    if (daysDifference >= 15) {\n      localStorage.clear();\n      localStorage.setItem(\"marvelStorageDate\", Date.now());\n    }\n  };\n\n  const showModal = (id) => {\n    setOpenModal(true);\n\n    if (localStorage.getItem(id)) {\n      setCharactersInfo(JSON.parse(localStorage.getItem(id)));\n      setLoading(false);\n    } else {\n      axios\n        .get(\n          `https://gateway.marvel.com/v1/public/characters/${id}?ts=1&apikey=${API_PUBLIC_KEY}&hash=${hash}`\n        )\n        .then((response) => {\n          setCharactersInfo(response.data);\n          setLoading(false);\n\n          localStorage.setItem(id, JSON.stringify(response.data));\n          if (!localStorage.getItem(\"marvelStorageDate\")) {\n            localStorage.setItem(\"marvelStorageDate\", Date.now());\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  };\n\n  const hideModal = () => {\n    setOpenModal(false);\n    setLoading(true);\n  };\n  const capitalizedFirstLetter = (str) => {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  };\n  const averageGrade = maxQuestion / 2;\n\n  if (score < averageGrade) {\n    setTimeout(() => {\n      loadLevelQuestion(quizLevel);\n    }, 3000);\n  }\n\n  const decision =\n    score >= averageGrade ? (\n      <Fragment>\n        <div className=\"stepsBtnContainer\">\n          {quizLevel < levelNames.length ? (\n            <Fragment>\n              <p className=\"successMsg\">Bravo, passez au niveau suivant</p>\n              <button\n                className=\"btnResult success\"\n                onClick={() => loadLevelQuestion(quizLevel)}\n              >\n                Niveau suivant\n              </button>\n            </Fragment>\n          ) : (\n            <Fragment>\n              <p className=\"successMsg\">\n                {\" \"}\n                <GiTrophyCup size=\"50px\" /> Bravo vous êtes un expert\n              </p>\n              <button\n                className=\"btnResult gameOver\"\n                onClick={() => loadLevelQuestion(0)}\n              >\n                Accueil\n              </button>\n            </Fragment>\n          )}\n        </div>\n        <div className=\"percentage\">\n          <div className=\"progressPercent\">Réussite : {percent} %</div>\n          <div className=\"progressPercent\">\n            note : {score}/{maxQuestion}\n          </div>\n        </div>\n      </Fragment>\n    ) : (\n      <Fragment>\n        <div className=\"stepsBtnContainer\">\n          <p className=\"failureMsg\">Vous avez échoué !</p>\n        </div>\n        <div className=\"percentage\">\n          <div className=\"progressPercent\">Réussite : {percent} %</div>\n          <div className=\"progressPercent\">\n            note : {score}/{maxQuestion}\n          </div>\n        </div>\n      </Fragment>\n    );\n\n  const questionAnswer =\n    score >= averageGrade ? (\n      asked.map((question) => {\n        return (\n          <tr key={question.id}>\n            <td>{question.question}</td>\n            <td>{question.answer}</td>\n            <button\n              className=\"btnInfo\"\n              onClick={() => showModal(question.heroId)}\n            >\n              Info\n            </button>\n          </tr>\n        );\n      })\n    ) : (\n      <tr>\n        <td colSpan=\"3\">\n          <Loader\n            loadingMsg={\"Pas de réponse\"}\n            styling={{ textAlign: \"center\", color: \"red\" }}\n          />\n        </td>\n      </tr>\n    );\n\n  const resultInModal = !loading ? (\n    <Fragment>\n      <div className=\"modalHeader\">\n        <h2>{charactersInfo.data.results[0].name}</h2>\n      </div>\n      <div className=\"modalBody\">\n        <div className=\"comicImage\">\n          <img\n            src={\n              charactersInfo.data.results[0].thumbnail.path +\n              \".\" +\n              charactersInfo.data.results[0].thumbnail.extension\n            }\n            alt={charactersInfo.data.results[0].name}\n          />\n          {charactersInfo.attributionText}\n        </div>\n        <div className=\"comicDetails\">\n          <h3>Description</h3>\n          {charactersInfo.data.results[0].description ? (\n            <p>{charactersInfo.data.results[0].description}</p>\n          ) : (\n            <p>Description indisponible ...</p>\n          )}\n          <h3>+ d'infos</h3>\n          {charactersInfo.data.results[0].urls &&\n            charactersInfo.data.results[0].urls.map((url, index) => {\n              return (\n                <a\n                  key={index}\n                  href={url.url}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  {capitalizedFirstLetter(url.type)}\n                </a>\n              );\n            })}\n          <button></button>\n        </div>\n      </div>\n      <div className=\"modalFooter\" onClick={hideModal}>\n        <button className=\"modalBtn\">Fermer</button>\n      </div>\n    </Fragment>\n  ) : (\n    <Fragment>\n      <div className=\"modalHeader\">\n        <h2>En attente des données Marvel</h2>\n      </div>\n      <div className=\"modalBody\">\n        <Loader\n          loadingMsg={\"Pas de réponse\"}\n          styling={{ textAlign: \"center\", color: \"red\" }}\n        />\n      </div>\n    </Fragment>\n  );\n  return (\n    <Fragment>\n      {decision}\n      <hr />\n      <p>Les réponses aux questions posées</p>\n\n      <div className=\"answerContainer\">\n        <table className=\"answers\">\n          <thead>\n            <tr>\n              <th>Question</th>\n              <th>réponse</th>\n              <th>infos</th>\n            </tr>\n          </thead>\n          <tbody>{questionAnswer}</tbody>\n        </table>\n      </div>\n\n      <Modal showModal={openModal} hideModal={hideModal}>\n        {resultInModal}\n      </Modal>\n    </Fragment>\n  );\n});\n\nexport default React.memo(QuizOver);\n"]},"metadata":{},"sourceType":"module"}