{"ast":null,"code":"var _jsxFileName = \"/home/ubuntu2004/Projets/marvel-test/src/components/ProgressBar/index.js\";\nimport React, { Fragment } from \"react\";\n\nconst ProgressBar = ({\n  idQuestion,\n  maxQuestions\n}) => {\n  const getWidth = (totalQuestions, questionId) => {\n    return 100 / totalQuestions * questionId;\n  };\n\n  const actualQuestion = idQuestion + 1;\n  const progressPercent = getWidth(maxQuestions, actualQuestion);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"percentage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progressPercent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, `Question: ${idQuestion + 1}/${maxQuestions}`), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progressPercent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, `Progression: ${progressPercent}%`)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progressBar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progressBarChange\",\n    style: {\n      width: `${progressPercent}%`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default React.memo(ProgressBar);","map":{"version":3,"sources":["/home/ubuntu2004/Projets/marvel-test/src/components/ProgressBar/index.js"],"names":["React","Fragment","ProgressBar","idQuestion","maxQuestions","getWidth","totalQuestions","questionId","actualQuestion","progressPercent","width","memo"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAAD,KAAkC;AACpD,QAAMC,QAAQ,GAAG,CAACC,cAAD,EAAiBC,UAAjB,KAAgC;AAC/C,WAAQ,MAAMD,cAAP,GAAyBC,UAAhC;AACD,GAFD;;AAIA,QAAMC,cAAc,GAAGL,UAAU,GAAG,CAApC;AACA,QAAMM,eAAe,GAAGJ,QAAQ,CAACD,YAAD,EAAeI,cAAf,CAAhC;AAEA,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmC,aACjCL,UAAU,GAAG,CACd,IAAGC,YAAa,EAFjB,CADF,eAIE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmC,gBAAeK,eAAgB,GAAlE,CAJF,CADF,eAOE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAC,mBADZ;AAEE,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAG,GAAED,eAAgB;AAA5B,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAPF,CADF;AAgBD,CAxBD;;AA0BA,eAAeT,KAAK,CAACW,IAAN,CAAWT,WAAX,CAAf","sourcesContent":["import React, { Fragment } from \"react\";\n\nconst ProgressBar = ({ idQuestion, maxQuestions }) => {\n  const getWidth = (totalQuestions, questionId) => {\n    return (100 / totalQuestions) * questionId;\n  };\n\n  const actualQuestion = idQuestion + 1;\n  const progressPercent = getWidth(maxQuestions, actualQuestion);\n\n  return (\n    <Fragment>\n      <div className=\"percentage\">\n        <div className=\"progressPercent\">{`Question: ${\n          idQuestion + 1\n        }/${maxQuestions}`}</div>\n        <div className=\"progressPercent\">{`Progression: ${progressPercent}%`}</div>\n      </div>\n      <div className=\"progressBar\">\n        <div\n          className=\"progressBarChange\"\n          style={{ width: `${progressPercent}%` }}\n        ></div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default React.memo(ProgressBar);\n"]},"metadata":{},"sourceType":"module"}