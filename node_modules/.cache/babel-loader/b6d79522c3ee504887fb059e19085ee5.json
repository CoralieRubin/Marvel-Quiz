{"ast":null,"code":"import React,{Fragment}from\"react\";var ProgressBar=function ProgressBar(_ref){var idQuestion=_ref.idQuestion,maxQuestions=_ref.maxQuestions;var getWidth=function getWidth(totalQuestions,questionId){return 100/totalQuestions*questionId;};var actualQuestion=idQuestion+1;var progressPercent=getWidth(maxQuestions,actualQuestion);return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"percentage\"},/*#__PURE__*/React.createElement(\"div\",{className:\"progressPercent\"},\"Question: \".concat(idQuestion+1,\"/\").concat(maxQuestions)),/*#__PURE__*/React.createElement(\"div\",{className:\"progressPercent\"},\"Progression: \".concat(progressPercent,\"%\"))),/*#__PURE__*/React.createElement(\"div\",{className:\"progressBar\"},/*#__PURE__*/React.createElement(\"div\",{className:\"progressBarChange\",style:{width:\"\".concat(progressPercent,\"%\")}})));};export default React.memo(ProgressBar);","map":{"version":3,"sources":["/home/ubuntu2004/Projets/marvel-test/src/components/ProgressBar/index.js"],"names":["React","Fragment","ProgressBar","idQuestion","maxQuestions","getWidth","totalQuestions","questionId","actualQuestion","progressPercent","width","memo"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,MAAkC,IAA/BC,CAAAA,UAA+B,MAA/BA,UAA+B,CAAnBC,YAAmB,MAAnBA,YAAmB,CACpD,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,cAAD,CAAiBC,UAAjB,CAAgC,CAC/C,MAAQ,KAAMD,cAAP,CAAyBC,UAAhC,CACD,CAFD,CAIA,GAAMC,CAAAA,cAAc,CAAGL,UAAU,CAAG,CAApC,CACA,GAAMM,CAAAA,eAAe,CAAGJ,QAAQ,CAACD,YAAD,CAAeI,cAAf,CAAhC,CAEA,mBACE,oBAAC,QAAD,mBACE,2BAAK,SAAS,CAAC,YAAf,eACE,2BAAK,SAAS,CAAC,iBAAf,sBACEL,UAAU,CAAG,CADf,aAEIC,YAFJ,EADF,cAIE,2BAAK,SAAS,CAAC,iBAAf,yBAAkDK,eAAlD,MAJF,CADF,cAOE,2BAAK,SAAS,CAAC,aAAf,eACE,2BACE,SAAS,CAAC,mBADZ,CAEE,KAAK,CAAE,CAAEC,KAAK,WAAKD,eAAL,KAAP,CAFT,EADF,CAPF,CADF,CAgBD,CAxBD,CA0BA,cAAeT,CAAAA,KAAK,CAACW,IAAN,CAAWT,WAAX,CAAf","sourcesContent":["import React, { Fragment } from \"react\";\n\nconst ProgressBar = ({ idQuestion, maxQuestions }) => {\n  const getWidth = (totalQuestions, questionId) => {\n    return (100 / totalQuestions) * questionId;\n  };\n\n  const actualQuestion = idQuestion + 1;\n  const progressPercent = getWidth(maxQuestions, actualQuestion);\n\n  return (\n    <Fragment>\n      <div className=\"percentage\">\n        <div className=\"progressPercent\">{`Question: ${\n          idQuestion + 1\n        }/${maxQuestions}`}</div>\n        <div className=\"progressPercent\">{`Progression: ${progressPercent}%`}</div>\n      </div>\n      <div className=\"progressBar\">\n        <div\n          className=\"progressBarChange\"\n          style={{ width: `${progressPercent}%` }}\n        ></div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default React.memo(ProgressBar);\n"]},"metadata":{},"sourceType":"module"}