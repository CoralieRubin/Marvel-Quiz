{"ast":null,"code":"import _objectSpread from\"/home/ubuntu2004/Projets/marvel-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _objectWithoutProperties from\"/home/ubuntu2004/Projets/marvel-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import _classCallCheck from\"/home/ubuntu2004/Projets/marvel-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/ubuntu2004/Projets/marvel-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/ubuntu2004/Projets/marvel-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/ubuntu2004/Projets/marvel-test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component,Fragment}from\"react\";import{toast}from\"react-toastify\";import\"react-toastify/dist/ReactToastify.min.css\";import Levels from\"../Levels\";import ProgressBar from\"../ProgressBar\";import{QuizMarvel}from\"../QuizMarvel \";import QuizOver from\"../QuizOver\";import{FaChevronRight}from\"react-icons/fa\";toast.configure();var initialState={levelNames:[\"debutant\",\"confirme\",\"expert\"],quizLevel:0,maxQuestions:10,storedQuestion:[],question:null,options:[],idQuestion:0,btnDisabled:true,userAnswer:null,score:0,showWelcomeMsg:false,quizEnd:false,percent:null};var Quiz=/*#__PURE__*/function(_Component){_inherits(Quiz,_Component);var _super=_createSuper(Quiz);function Quiz(props){var _this;_classCallCheck(this,Quiz);_this=_super.call(this,props);_this.loadQuestion=function(quizz){var fetchedArrayQuiz=QuizMarvel[0].quizz[quizz];if(fetchedArrayQuiz.length>=_this.state.maxQuestions){_this.storedDataRef.current=fetchedArrayQuiz;var newArray=fetchedArrayQuiz.map(function(_ref){var answer=_ref.answer,keepRest=_objectWithoutProperties(_ref,[\"answer\"]);return keepRest;});_this.setState({storedQuestion:newArray});}};_this.showToastMsg=function(pseudo){if(!_this.state.showWelcomeMsg){_this.setState({showWelcomeMsg:true});toast.warn(\"Bienvenue \".concat(pseudo,\", et bonne chance!\"),{position:\"top-right\",autoClose:2000,hideProgressBar:false,closeOnClick:true,pauseOnHover:true,draggable:false,bodyClassName:\"toastify-color-welcome\"});}};_this.nextQuestion=function(){if(_this.state.idQuestion===_this.state.maxQuestions-1){_this.setState({quizEnd:true});}else{_this.setState(function(prevState){return{idQuestion:prevState.idQuestion+1};});}var goodAnswer=_this.storedDataRef.current[_this.state.idQuestion].answer;if(_this.state.userAnswer===goodAnswer){_this.setState(function(prevState){return{score:prevState.score+1};});toast.success(\"Bravo +1\",{position:\"top-right\",autoClose:2000,hideProgressBar:false,closeOnClick:true,pauseOnHover:true,draggable:true,bodyClassName:\"toastify-color\"});}else{toast.error(\"RatÃ© 0\",{position:\"top-right\",autoClose:2000,hideProgressBar:false,closeOnClick:true,pauseOnHover:true,draggable:true,bodyClassName:\"toastify-color\"});}};_this.submitAnswer=function(selectedAnswer){_this.setState({userAnswer:selectedAnswer,btnDisabled:false});};_this.getPercentage=function(maxquest,ourScore){return ourScore/maxquest*100;};_this.gameOver=function(percent){if(percent>=50){_this.setState({quizLevel:_this.state.quizLevel+1,percent:percent});}else{_this.setState({percent:percent});}};_this.loadLevelQuestion=function(param){_this.setState(_objectSpread(_objectSpread({},initialState),{},{quizLevel:param}));_this.loadQuestion(_this.state.levelNames[param]);};_this.state=initialState;_this.storedDataRef=React.createRef();return _this;}_createClass(Quiz,[{key:\"componentDidMount\",value:function componentDidMount(){this.loadQuestion(this.state.levelNames[this.state.quizLevel]);}},{key:\"componentDidUpdate\",value:function componentDidUpdate(PrevProps,prevState){var _this$state=this.state,maxQuestions=_this$state.maxQuestions,storedQuestion=_this$state.storedQuestion,idQuestion=_this$state.idQuestion,score=_this$state.score,quizEnd=_this$state.quizEnd;if(storedQuestion!==prevState.storedQuestion&&storedQuestion.length){this.setState({question:storedQuestion[idQuestion].question,options:storedQuestion[idQuestion].options});}if(idQuestion!==prevState.idQuestion&&storedQuestion.length){this.setState({question:storedQuestion[idQuestion].question,options:storedQuestion[idQuestion].options,userAnswer:null,btnDisabled:true});}if(quizEnd!==prevState.quizEnd){var gradePercent=this.getPercentage(maxQuestions,score);this.gameOver(gradePercent);}if(this.props.userData.pseudo!==PrevProps.userData.pseudo){this.showToastMsg(this.props.userData.pseudo);}}},{key:\"render\",value:function render(){var _this2=this;var _this$state2=this.state,levelNames=_this$state2.levelNames,quizLevel=_this$state2.quizLevel,maxQuestions=_this$state2.maxQuestions,question=_this$state2.question,options=_this$state2.options,idQuestion=_this$state2.idQuestion,btnDisabled=_this$state2.btnDisabled,userAnswer=_this$state2.userAnswer,score=_this$state2.score,quizEnd=_this$state2.quizEnd,percent=_this$state2.percent;var displayOptions=options.map(function(option,index){return/*#__PURE__*/React.createElement(\"p\",{key:index,className:\"answerOptions \".concat(userAnswer===option?\"selected\":null),onClick:function onClick(){return _this2.submitAnswer(option);}},/*#__PURE__*/React.createElement(FaChevronRight,null),\" \",option);});return quizEnd?/*#__PURE__*/React.createElement(QuizOver,{ref:this.storedDataRef,levelNames:levelNames,score:score,maxQuestion:maxQuestions,quizLevel:quizLevel,percent:percent,loadLevelQuestion:this.loadLevelQuestion}):/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(Levels,{levelNames:levelNames,quizLevel:quizLevel}),/*#__PURE__*/React.createElement(ProgressBar,{idQuestion:idQuestion,maxQuestions:maxQuestions}),/*#__PURE__*/React.createElement(\"h2\",null,question),displayOptions,/*#__PURE__*/React.createElement(\"button\",{onClick:this.nextQuestion,disabled:btnDisabled,className:\"btnSubmit\"},idQuestion<maxQuestions-1?\"Suivant\":\"Terminer\"));}}]);return Quiz;}(Component);export default Quiz;","map":{"version":3,"sources":["/home/ubuntu2004/Projets/marvel-test/src/components/Quiz/index.js"],"names":["React","Component","Fragment","toast","Levels","ProgressBar","QuizMarvel","QuizOver","FaChevronRight","configure","initialState","levelNames","quizLevel","maxQuestions","storedQuestion","question","options","idQuestion","btnDisabled","userAnswer","score","showWelcomeMsg","quizEnd","percent","Quiz","props","loadQuestion","quizz","fetchedArrayQuiz","length","state","storedDataRef","current","newArray","map","answer","keepRest","setState","showToastMsg","pseudo","warn","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","bodyClassName","nextQuestion","prevState","goodAnswer","success","error","submitAnswer","selectedAnswer","getPercentage","maxquest","ourScore","gameOver","loadLevelQuestion","param","createRef","PrevProps","gradePercent","userData","displayOptions","option","index"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\nimport Levels from \"../Levels\";\nimport ProgressBar from \"../ProgressBar\";\nimport { QuizMarvel } from \"../QuizMarvel \";\nimport QuizOver from \"../QuizOver\";\nimport { FaChevronRight } from \"react-icons/fa\";\n\ntoast.configure();\n\nconst initialState = {\n  levelNames: [\"debutant\", \"confirme\", \"expert\"],\n  quizLevel: 0,\n  maxQuestions: 10,\n  storedQuestion: [],\n  question: null,\n  options: [],\n  idQuestion: 0,\n  btnDisabled: true,\n  userAnswer: null,\n  score: 0,\n  showWelcomeMsg: false,\n  quizEnd: false,\n  percent: null,\n};\n\nclass Quiz extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n    this.storedDataRef = React.createRef();\n  }\n\n  loadQuestion = (quizz) => {\n    const fetchedArrayQuiz = QuizMarvel[0].quizz[quizz];\n    if (fetchedArrayQuiz.length >= this.state.maxQuestions) {\n      this.storedDataRef.current = fetchedArrayQuiz;\n\n      const newArray = fetchedArrayQuiz.map(\n        ({ answer, ...keepRest }) => keepRest\n      );\n      this.setState({\n        storedQuestion: newArray,\n      });\n    }\n  };\n\n  showToastMsg = (pseudo) => {\n    if (!this.state.showWelcomeMsg) {\n      this.setState({\n        showWelcomeMsg: true,\n      });\n      toast.warn(`Bienvenue ${pseudo}, et bonne chance!`, {\n        position: \"top-right\",\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: false,\n        bodyClassName: \"toastify-color-welcome\",\n      });\n    }\n  };\n  componentDidMount() {\n    this.loadQuestion(this.state.levelNames[this.state.quizLevel]);\n  }\n\n  nextQuestion = () => {\n    if (this.state.idQuestion === this.state.maxQuestions - 1) {\n      this.setState({\n        quizEnd: true,\n      });\n    } else {\n      this.setState((prevState) => ({ idQuestion: prevState.idQuestion + 1 }));\n    }\n\n    const goodAnswer = this.storedDataRef.current[this.state.idQuestion].answer;\n    if (this.state.userAnswer === goodAnswer) {\n      this.setState((prevState) => ({ score: prevState.score + 1 }));\n\n      toast.success(\"Bravo +1\", {\n        position: \"top-right\",\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        bodyClassName: \"toastify-color\",\n      });\n    } else {\n      toast.error(\"RatÃ© 0\", {\n        position: \"top-right\",\n        autoClose: 2000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        bodyClassName: \"toastify-color\",\n      });\n    }\n  };\n  componentDidUpdate(PrevProps, prevState) {\n    const {\n      maxQuestions,\n      storedQuestion,\n      idQuestion,\n      score,\n      quizEnd,\n    } = this.state;\n\n    if (storedQuestion !== prevState.storedQuestion && storedQuestion.length) {\n      this.setState({\n        question: storedQuestion[idQuestion].question,\n        options: storedQuestion[idQuestion].options,\n      });\n    }\n\n    if (idQuestion !== prevState.idQuestion && storedQuestion.length) {\n      this.setState({\n        question: storedQuestion[idQuestion].question,\n        options: storedQuestion[idQuestion].options,\n        userAnswer: null,\n        btnDisabled: true,\n      });\n    }\n\n    if (quizEnd !== prevState.quizEnd) {\n      const gradePercent = this.getPercentage(maxQuestions, score);\n      this.gameOver(gradePercent);\n    }\n\n    if (this.props.userData.pseudo !== PrevProps.userData.pseudo) {\n      this.showToastMsg(this.props.userData.pseudo);\n    }\n  }\n\n  submitAnswer = (selectedAnswer) => {\n    this.setState({\n      userAnswer: selectedAnswer,\n      btnDisabled: false,\n    });\n  };\n\n  getPercentage = (maxquest, ourScore) => (ourScore / maxquest) * 100;\n\n  gameOver = (percent) => {\n    if (percent >= 50) {\n      this.setState({\n        quizLevel: this.state.quizLevel + 1,\n        percent: percent,\n      });\n    } else {\n      this.setState({\n        percent: percent,\n      });\n    }\n  };\n\n  loadLevelQuestion = (param) => {\n    this.setState({\n      ...initialState,\n      quizLevel: param,\n    });\n    this.loadQuestion(this.state.levelNames[param]);\n  };\n\n  render() {\n    const {\n      levelNames,\n      quizLevel,\n      maxQuestions,\n      question,\n      options,\n      idQuestion,\n      btnDisabled,\n      userAnswer,\n      score,\n      quizEnd,\n      percent,\n    } = this.state;\n\n    const displayOptions = options.map((option, index) => {\n      return (\n        <p\n          key={index}\n          className={`answerOptions ${\n            userAnswer === option ? \"selected\" : null\n          }`}\n          onClick={() => this.submitAnswer(option)}\n        >\n          <FaChevronRight /> {option}\n        </p>\n      );\n    });\n\n    return quizEnd ? (\n      <QuizOver\n        ref={this.storedDataRef}\n        levelNames={levelNames}\n        score={score}\n        maxQuestion={maxQuestions}\n        quizLevel={quizLevel}\n        percent={percent}\n        loadLevelQuestion={this.loadLevelQuestion}\n      />\n    ) : (\n      <Fragment>\n        <Levels levelNames={levelNames} quizLevel={quizLevel} />\n        <ProgressBar idQuestion={idQuestion} maxQuestions={maxQuestions} />\n        <h2>{question}</h2>\n        {displayOptions}\n        <button\n          onClick={this.nextQuestion}\n          disabled={btnDisabled}\n          className=\"btnSubmit\"\n        >\n          {idQuestion < maxQuestions - 1 ? \"Suivant\" : \"Terminer\"}\n        </button>\n      </Fragment>\n    );\n  }\n}\n\nexport default Quiz;\n"]},"metadata":{},"sourceType":"module"}